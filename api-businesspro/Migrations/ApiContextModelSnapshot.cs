// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api_businesspro.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("API.Models.AccionesCampoDetalleRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccionesCampoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEClasificacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<long?>("CrearAccionesCampoRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CveOperacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdParte")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Tiempo")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CrearAccionesCampoRequestId");

                    b.ToTable("AccionesCampoDetalle");
                });

            modelBuilder.Entity("API.Models.AccionesCampoSeriesRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccionesCampoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BRealizado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEDistribuidor")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CrearAccionesCampoRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FechaRealizacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.Property<int>("Origen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioActualiza")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CrearAccionesCampoRequestId");

                    b.ToTable("AccionesCampoSeriesRequest");
                });

            modelBuilder.Entity("API.Models.CrearAccionesCampoRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CETipoCampana")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CveAccionesCampo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaTermino")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KilometrajeLimite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreAccionesCampo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreResponsable")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AccionesCampo");
                });

            modelBuilder.Entity("API.Models.AccionesCampoDetalleRequest", b =>
                {
                    b.HasOne("API.Models.CrearAccionesCampoRequest", null)
                        .WithMany("Detalles")
                        .HasForeignKey("CrearAccionesCampoRequestId");
                });

            modelBuilder.Entity("API.Models.AccionesCampoSeriesRequest", b =>
                {
                    b.HasOne("API.Models.CrearAccionesCampoRequest", null)
                        .WithMany("Series")
                        .HasForeignKey("CrearAccionesCampoRequestId");
                });

            modelBuilder.Entity("API.Models.CrearAccionesCampoRequest", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Series");
                });
#pragma warning restore 612, 618
        }
    }
}
