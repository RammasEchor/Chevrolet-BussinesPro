// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api_businesspro.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20240508215718_AddSucursal")]
    partial class AddSucursal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("API.Models.AccionesCampoDetalleRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccionCampoID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEClasificacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<string>("CveOperacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdParte")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Tiempo")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AccionCampoID");

                    b.ToTable("AccionesCampoDetalleRequest");
                });

            modelBuilder.Entity("API.Models.AccionesCampoSeriesRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AccionCampoID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BRealizado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEDistribuidor")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaRealizacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.Property<int>("Origen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioActualiza")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccionCampoID");

                    b.ToTable("AccionesCampoSeriesRequest");
                });

            modelBuilder.Entity("API.Models.CrearAccionesCampoRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CETipoCampana")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("CitaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CveAccionesCampo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaInicio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaTermino")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KilometrajeLimite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreAccionesCampo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreResponsable")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CitaID");

                    b.ToTable("CrearAccionesCampoRequest");
                });

            modelBuilder.Entity("API.Models.CrearCitaRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AnModelo")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("BConfirmacion")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("BServicioCitaRepro")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("BServicioExpress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEAsesor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CEColorExterior")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEColorInterior")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEEstatusCita")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CEMarca")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Conductor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Contacto")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CveCitaExterna")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CveUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FechaCita")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaCitaReal")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaDOFU")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaEntrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("HoraCita")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HoraCitaReal")
                        .HasColumnType("TEXT");

                    b.Property<string>("HoraEntrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdDocInterf")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdOrden")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdServicioCitaRepro")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdUnidadesCatalogo")
                        .HasColumnType("TEXT");

                    b.Property<string>("InterfazOrigen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kilometraje")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedioTransporte")
                        .HasColumnType("TEXT");

                    b.Property<string>("MortivoServicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObsExternas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Per_idpersona")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Placas")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Propietario")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ResponsableMtto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CrearCitaRequest");
                });

            modelBuilder.Entity("API.Models.CrearOrdenDetalleRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BVentaAdicional")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEClasificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEEstatusClasificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEGrupo")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEMecanico")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEMotivoCancelacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("CESubgrupo")
                        .HasColumnType("TEXT");

                    b.Property<string>("CETipoPrecio")
                        .HasColumnType("TEXT");

                    b.Property<string>("CETipoTrab")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Cantidad")
                        .HasColumnType("REAL");

                    b.Property<double?>("CantidadSurtido")
                        .HasColumnType("REAL");

                    b.Property<string>("CodigoOperacionExterna")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoParte")
                        .HasColumnType("TEXT");

                    b.Property<int>("Consec")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ConsecutivoSurtido")
                        .HasColumnType("REAL");

                    b.Property<double?>("ConsecutivoTOT")
                        .HasColumnType("REAL");

                    b.Property<double?>("Costo")
                        .HasColumnType("REAL");

                    b.Property<double?>("CostoPagado")
                        .HasColumnType("REAL");

                    b.Property<string>("CveOperacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<double?>("DisponiblePartes")
                        .HasColumnType("REAL");

                    b.Property<double?>("ExistenciaPartes")
                        .HasColumnType("REAL");

                    b.Property<string>("FacturaTOT")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraPedidoParte")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraRealOperacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraSolicitud")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraSurtido")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraTermino")
                        .HasColumnType("TEXT");

                    b.Property<double?>("IVA")
                        .HasColumnType("REAL");

                    b.Property<double?>("IVATOT")
                        .HasColumnType("REAL");

                    b.Property<int?>("IdPaqueteServ")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ImpuestoDescuento")
                        .HasColumnType("REAL");

                    b.Property<double?>("MontoDescuento")
                        .HasColumnType("REAL");

                    b.Property<int?>("NivelMO")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("NoPedidoPartes")
                        .HasColumnType("REAL");

                    b.Property<double?>("NumeroChipsOperacion")
                        .HasColumnType("REAL");

                    b.Property<long>("OrdenID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PorcentajeDescuento")
                        .HasColumnType("REAL");

                    b.Property<double?>("PrecioListaPartes")
                        .HasColumnType("REAL");

                    b.Property<double?>("PrecioUnitario")
                        .HasColumnType("REAL");

                    b.Property<int?>("Proveedor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RenServicios")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("RepTiempo")
                        .HasColumnType("REAL");

                    b.Property<double?>("Subtotal")
                        .HasColumnType("REAL");

                    b.Property<double?>("TiempoPagado")
                        .HasColumnType("REAL");

                    b.Property<double?>("TiempoRealOperacion")
                        .HasColumnType("REAL");

                    b.Property<double?>("UnidadTiempo")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("OrdenID");

                    b.ToTable("CrearOrdenDetalleRequest");
                });

            modelBuilder.Entity("API.Models.CrearOrdenRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BAplicaIva")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BCambioFechaPromesaEntrega")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BCredito")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BExpress")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BGarantiaExtendida")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BModificarCita")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEAseguradora")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEAsesor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CEEstatusOrden")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEFormaPago")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEMotivoCancelacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("CETipoOrden")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteFacturar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Facturas")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraCierreOrden")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraOrden")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaHoraPromesaEntrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaProximoSevicio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdConductor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdContacto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdOrden")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdPropietario")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdRespMtto")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdServicioCita")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdVehiculosVIN")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ImporteDeducible")
                        .HasColumnType("REAL");

                    b.Property<string>("Katashiki")
                        .HasColumnType("TEXT");

                    b.Property<int>("KilometrajeActual")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KilometrajeSalida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MotivoCambioFechaEntrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoEconomico")
                        .HasColumnType("TEXT");

                    b.Property<double?>("NoFlotilla")
                        .HasColumnType("REAL");

                    b.Property<string>("NoPolizaSeguro")
                        .HasColumnType("TEXT");

                    b.Property<double?>("NoSalida")
                        .HasColumnType("REAL");

                    b.Property<string>("NoSiniestro")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoTorre")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroEconomico")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroPlaca")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsoCFDI")
                        .HasColumnType("TEXT");

                    b.Property<string>("VigenciaSeguro")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CrearOrdenRequest");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteOperacionesResquest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoEreact")
                        .HasColumnType("TEXT");

                    b.Property<int>("Costo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CveOperacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("CvePaqueteServ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdPaqueteServConse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NivelMO")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PaqueteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrecioVenta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RepTiempo")
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoMO")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnidadesTimpo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteID");

                    b.ToTable("CrearPaqueteOperacionesResquest");
                });

            modelBuilder.Entity("API.Models.CrearPaquetePartesResquet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CantidadPartes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CtoUniEst")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CvePaqueteServ")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdParte")
                        .HasColumnType("TEXT");

                    b.Property<long>("PaqueteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrecioUnitario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoPrecio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteID");

                    b.ToTable("CrearPaquetePartesResquet");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BExclusivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("CitaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CvePaqueteServ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DescripcionPaqueteServ")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaCTprecio")
                        .HasColumnType("TEXT");

                    b.Property<string>("FechaCTref")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdTaller")
                        .HasColumnType("TEXT");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MoCosto")
                        .HasColumnType("REAL");

                    b.Property<double>("MoVenta")
                        .HasColumnType("REAL");

                    b.Property<string>("NombrePaqueteServ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.Property<int>("Origen")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PorIva")
                        .HasColumnType("REAL");

                    b.Property<double>("PrecioUT")
                        .HasColumnType("REAL");

                    b.Property<double>("ReCosto")
                        .HasColumnType("REAL");

                    b.Property<double>("ReVenta")
                        .HasColumnType("REAL");

                    b.Property<double>("TtCosto")
                        .HasColumnType("REAL");

                    b.Property<double>("TtVenta")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CitaID");

                    b.ToTable("CrearPaqueteRequest");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteTotsResquest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoEreact")
                        .HasColumnType("TEXT");

                    b.Property<int>("Costo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CvePaqueteServ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdPaqueteServConse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.Property<long>("PaqueteID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrecioVenta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoTT")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteID");

                    b.ToTable("CrearPaqueteTotsResquest");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteVehiculoResquest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CvePaqueteServ")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCatalogo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<long>("PaqueteID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaqueteID");

                    b.ToTable("CrearPaqueteVehiculoResquest");
                });

            modelBuilder.Entity("API.Models.EmpresaRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CveEmpresa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmpresaRequest");
                });

            modelBuilder.Entity("API.Models.FacturaRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BIVADesglosado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEEstatusDocumento")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEFormaPago")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEMoneda")
                        .HasColumnType("TEXT");

                    b.Property<string>("CETipoDocumento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteFactura")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FechaHoraDocumento")
                        .HasColumnType("TEXT");

                    b.Property<string>("FolioDocumento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdPedido")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdPedidoPartes")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdSucursal")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MontoDescuento")
                        .HasColumnType("REAL");

                    b.Property<double?>("MontoIVA")
                        .HasColumnType("REAL");

                    b.Property<double?>("MontoTotal")
                        .HasColumnType("REAL");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("REAL");

                    b.Property<double?>("VentaBruta")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("FacturaRequest");
                });

            modelBuilder.Entity("API.Models.PersonaCorreoRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cor_dircorreo")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Cor_predeterminada")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PersonaRequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonaRequestId");

                    b.ToTable("PersonaCorreoRequest");
                });

            modelBuilder.Entity("API.Models.PersonaDatosFisicaRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Edc_idedocivil")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id_acteconomica")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Pai_paisnacimiento")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Paisnacionalidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Paisnumtel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdf_nacionalidad")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Pdf_sexo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Per_antiguedadlaboral")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_curp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_empresa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_fechanacimiento")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Per_ingresomensual")
                        .HasColumnType("REAL");

                    b.Property<string>("Per_puestoocupa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_situacionlaboral")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Tit_idtitulo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PersonaDatosFisicaRequest");
                });

            modelBuilder.Entity("API.Models.PersonaDatosMoralRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Actaconst")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fideicomiso")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Id_acteconomica")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idreppermoral")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Paisnacionalidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Paisnumtel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_fechainscripcionrepresentantelegal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_folio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_foliorepresentantelegal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_libro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_librorepresentantelegal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_lugarescritura")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_lugarrepresentantelegal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_nombrerepresentantelegal")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Pdm_numeroescritura")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Pdm_numeroescriturarepresentantelegal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pdm_volumen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pdm_volumenrepresentantelegal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pmd_fechaconstitutiva")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pmd_fechainscripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rlegalestado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rlegalnotario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rlegalnotnumero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rpublicoestado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rpublicofecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rpubliconumero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tnotarialestado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tnotarialnotario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tnotarialnotnumero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tnotarialnumero")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Tps_idtiposociedad")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PersonaDatosMoralRequest");
                });

            modelBuilder.Entity("API.Models.PersonaDireccionRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dir_iddireccion")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Dir_idrol")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Dir_predeterminada")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PersonaRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Referencias")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tpd_idtipodireccion")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonaRequestId");

                    b.ToTable("PersonaDireccionRequest");
                });

            modelBuilder.Entity("API.Models.PersonaIdentificacionRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Aut_idautoridad")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Esleylavado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ide_fechaemision")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ide_fechavigencia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ide_numero")
                        .HasColumnType("TEXT");

                    b.Property<string>("Otrotipoidentifica")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PersonaRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tpi_ididentifica")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonaRequestId");

                    b.ToTable("PersonaIdentificacionRequest");
                });

            modelBuilder.Entity("API.Models.PersonaRedesSocialesRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PersonaRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Rds_idtipo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Red_nombreusuario")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Red_predeterminado")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonaRequestId");

                    b.ToTable("PersonaRedesSocialesRequest");
                });

            modelBuilder.Entity("API.Models.PersonaRelDmsRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PersonaRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rdm_cesistemaorigen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rdm_cveusrdms")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonaRequestId");

                    b.ToTable("PersonaRelDmsRequest");
                });

            modelBuilder.Entity("API.Models.PersonaRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ctapagopred")
                        .HasColumnType("TEXT");

                    b.Property<long?>("DatospersonafisicaId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DatospersonamoralId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idaviso")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idclienterefacciones")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idejecutivo")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idformapago")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idmediocontacto")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idregimenfiscal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idsucursal")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Idtipoclienteventas")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Per_avisopriv")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Per_enviopubli")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Per_materno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_nombrecomercial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_nombreorazonsocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_paterno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Per_rfc")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Tpa_idactividad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tpo_idtipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DatospersonafisicaId");

                    b.HasIndex("DatospersonamoralId");

                    b.ToTable("PersonaRequest");
                });

            modelBuilder.Entity("API.Models.PersonaTelefonoRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PersonaRequestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tel_extensiones")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Tel_horalocalizafin")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Tel_horalocalizaini")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tel_lada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tel_numero")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Tel_predeterminado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ttl_idtipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonaRequestId");

                    b.ToTable("PersonaTelefonoRequest");
                });

            modelBuilder.Entity("API.Models.SucursalRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CveSucursal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreSucursal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SucursalRequest");
                });

            modelBuilder.Entity("API.Models.AccionesCampoDetalleRequest", b =>
                {
                    b.HasOne("API.Models.CrearAccionesCampoRequest", "AccionCampo")
                        .WithMany("Detalles")
                        .HasForeignKey("AccionCampoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccionCampo");
                });

            modelBuilder.Entity("API.Models.AccionesCampoSeriesRequest", b =>
                {
                    b.HasOne("API.Models.CrearAccionesCampoRequest", "AccionCampo")
                        .WithMany("Series")
                        .HasForeignKey("AccionCampoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccionCampo");
                });

            modelBuilder.Entity("API.Models.CrearAccionesCampoRequest", b =>
                {
                    b.HasOne("API.Models.CrearCitaRequest", "Cita")
                        .WithMany("AccionesCampo")
                        .HasForeignKey("CitaID");

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("API.Models.CrearOrdenDetalleRequest", b =>
                {
                    b.HasOne("API.Models.CrearOrdenRequest", "Orden")
                        .WithMany("Detalles")
                        .HasForeignKey("OrdenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteOperacionesResquest", b =>
                {
                    b.HasOne("API.Models.CrearPaqueteRequest", "Paquete")
                        .WithMany("Operaciones")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("API.Models.CrearPaquetePartesResquet", b =>
                {
                    b.HasOne("API.Models.CrearPaqueteRequest", "Paquete")
                        .WithMany("Partes")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteRequest", b =>
                {
                    b.HasOne("API.Models.CrearCitaRequest", "Cita")
                        .WithMany("Paquetes")
                        .HasForeignKey("CitaID");

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteTotsResquest", b =>
                {
                    b.HasOne("API.Models.CrearPaqueteRequest", "Paquete")
                        .WithMany("Tots")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteVehiculoResquest", b =>
                {
                    b.HasOne("API.Models.CrearPaqueteRequest", "Paquete")
                        .WithMany("Vehiculos")
                        .HasForeignKey("PaqueteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("API.Models.PersonaCorreoRequest", b =>
                {
                    b.HasOne("API.Models.PersonaRequest", null)
                        .WithMany("Correos")
                        .HasForeignKey("PersonaRequestId");
                });

            modelBuilder.Entity("API.Models.PersonaDireccionRequest", b =>
                {
                    b.HasOne("API.Models.PersonaRequest", null)
                        .WithMany("Direcciones")
                        .HasForeignKey("PersonaRequestId");
                });

            modelBuilder.Entity("API.Models.PersonaIdentificacionRequest", b =>
                {
                    b.HasOne("API.Models.PersonaRequest", null)
                        .WithMany("Identificaciones")
                        .HasForeignKey("PersonaRequestId");
                });

            modelBuilder.Entity("API.Models.PersonaRedesSocialesRequest", b =>
                {
                    b.HasOne("API.Models.PersonaRequest", null)
                        .WithMany("Redessociales")
                        .HasForeignKey("PersonaRequestId");
                });

            modelBuilder.Entity("API.Models.PersonaRelDmsRequest", b =>
                {
                    b.HasOne("API.Models.PersonaRequest", null)
                        .WithMany("Relaciondms")
                        .HasForeignKey("PersonaRequestId");
                });

            modelBuilder.Entity("API.Models.PersonaRequest", b =>
                {
                    b.HasOne("API.Models.PersonaDatosFisicaRequest", "Datospersonafisica")
                        .WithMany()
                        .HasForeignKey("DatospersonafisicaId");

                    b.HasOne("API.Models.PersonaDatosMoralRequest", "Datospersonamoral")
                        .WithMany()
                        .HasForeignKey("DatospersonamoralId");

                    b.Navigation("Datospersonafisica");

                    b.Navigation("Datospersonamoral");
                });

            modelBuilder.Entity("API.Models.PersonaTelefonoRequest", b =>
                {
                    b.HasOne("API.Models.PersonaRequest", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("PersonaRequestId");
                });

            modelBuilder.Entity("API.Models.CrearAccionesCampoRequest", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("API.Models.CrearCitaRequest", b =>
                {
                    b.Navigation("AccionesCampo");

                    b.Navigation("Paquetes");
                });

            modelBuilder.Entity("API.Models.CrearOrdenRequest", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("API.Models.CrearPaqueteRequest", b =>
                {
                    b.Navigation("Operaciones");

                    b.Navigation("Partes");

                    b.Navigation("Tots");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("API.Models.PersonaRequest", b =>
                {
                    b.Navigation("Correos");

                    b.Navigation("Direcciones");

                    b.Navigation("Identificaciones");

                    b.Navigation("Redessociales");

                    b.Navigation("Relaciondms");

                    b.Navigation("Telefonos");
                });
#pragma warning restore 612, 618
        }
    }
}
